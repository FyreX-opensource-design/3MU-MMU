[toolchanger]
save_current_tool: true
initialize_gcode: 
  #  Gcode to run on initialize. Typically used for homing any motors, or 
  #  reselecting saved tool.
initialize_on: first-use
  # When this toolchanger gets initialized.
  #  - manual: only when INITIALIZE_TOOLCHANGER is called.
  #  - home: when homing the printer.
  #  - first-use: on first toolchange command.
verify_tool_pickup: True
  # If tool detection is available, will verify tool presence after pickp_gcode
require_tool_present: False
  # Raise error if no tool present on init or on unmount. 
  # Use in case the tool contains crucial sensors for the printer to operate/home.  
uses_axis: 
  # Axis used by the tool change process
#on_axis_not_homed: abort
  # When required axis are not homed
  # - abort: aborts the command
  # - home: attempts to home the axis
# params_*: 
  # Extra params to pass to pickup/dropoff gcode. Accessible in the gcode via
  # `toolchanger.params_name`.
  # Also will be copied to any tools for this toolchanger with local
  # values overriding. 
before_change_gcode:
  # Common gcode to run before any tool change   
after_change_gcode:
  # Common gcode to run after any tool change.
  # EG: To set custom input shaping, accelerations, etc.  
parent_mounting_mode: parent-first 
  # How to mount parent when the tool is selected:
  # - parent-first - mount parent and then child
  # - child-first - mount child before parent can be mounted
parent_unmounting_mode: lazy 
  # How to unmount parent when the tool is deselected:
  # - child-first - unmount child and then parent
  # - parent-first - unmount parent and then child
  # - lazy - no dot unmount the child unless a needed to mount a sibling
transfer_fan_speed: False
  # When tre, fan speed is transferred during toolchange. When false, fan speeds are not changed during toolchange.     

[tool ThreeMU_Lane1]
toolchanger: toolchanger
  # Which toolchanger this tool belongs to.
extruder: extruder
  # Name of the extruder to activate when this tool is selected.
  # If not specified, will use parent's extruder.
#extruder_stepper: 
  # Name of extruder stepper to use for filament motion.
  # When set the main extruder is only used for temperature control.
  # Useful for Y type multi extruder hotends.  
#fan: 
  # Name of the fan to use as print cooling fan when this tool is selected.
  # If not set, uses parent fan or does nothing.
detection_pin: <post entry pin 1>
  # Pin to use for tool presence detection.
tool_number: 1
  # Tool number to register this tool as.
  # When set, creates the T<n> macro and changes M104/M109 T<n> to target this tool.
  # Can be overwritten in runtime using [ASSIGN_TOOL](G-Codes.md#ASSIGN_TOOL) command.
pickup_gcode:
  # Gcode to run to pick up this tool, if empty, there is no pickup code.
  # The gocode can use `tool` and `toolchanger` variables to access
  # [their status](Status_Reference.md#tool).
dropoff_gcode:
  # Gcode to run to drop off this tool, if empty, there is no dropoff code. 
# params_*: 
t_command_restore_axis: XYZ
   # Which axis to restore with the T<n> command, see SELECT_TOOL for command for more info.

[extruder_stepper ThreeMU_Lane1]
extruder: 
step_pin: <stepper pin 1>
dir_pin: <dir pin 1>
enable_pin: <enable pin 1>
microsteps: 16
rotation_distance: 1.0

[filament_switch_sensor ThreeMU_Lane_Pre_Load1]
pause_on_runout: False
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
runout_gcode:
    {% set svv = printer.save_variables.variables %}
    SET_GCODE_VARIABLE MACRO="_ThreeMU_Lane1" VARIABLE="three_mu_pre_load_lane1" VALUE=0
    {% if idle_timeout.state == "printing" && svv.ThreeMU_lane == 1 %}
        PAUSE
    {% endif %}
insert_gcode:
    SET_GCODE_VARIABLE MACRO="_ThreeMU_Lane1" VARIABLE="three_mu_pre_load_lane1" VALUE=1
    _ThreeMU_Lane_Load1
event_delay: 0.5
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
debounce_delay: 0.3
#   A period of time in seconds to debounce events prior to running the
#   switch gcode. The switch must he held in a single state for at least
#   this long to activate. If the switch is toggled on/off during this delay,
#   the event is ignored. Default is 0.
switch_pin: <pre entry pin 1>

[filament_switch_sensor ThreeMU_Lane_Post_Load1]
pause_on_runout: False
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
runout_gcode:
    SET_GCODE_VARIABLE MACRO="_ThreeMU_Lane1" VARIABLE="three_mu_post_load_lane1" VALUE=0
insert_gcode:
    SET_GCODE_VARIABLE MACRO="_ThreeMU_Lane1" VARIABLE="three_mu_post_load_lane1" VALUE=1
event_delay: 0.5
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
debounce_delay: 0.3
#   A period of time in seconds to debounce events prior to running the
#   switch gcode. The switch must he held in a single state for at least
#   this long to activate. If the switch is toggled on/off during this delay,
#   the event is ignored. Default is 0.
switch_pin: <post entry pin 1>

[gcode_macro _ThreeMU_Settings]
variable_three_mu_distance_load: 100
variable_three_mu_distance_unload: 1500
gcode:

[gcode_macro _Save_Tool]
gcode:
    {% set tool = params.TOOL|int %}
    {% set svv = printer.save_variables.variables %}
    SAVE_VARIABLE VARIABLE=ThreeMU_lane VALUE={tool}

[loop_macro _ThreeMU_Lane_Load1]
#entry:
#   A list of G-Code commands to execute prior to the the looping
#   G-Code commands in the `gcode` section. These commands can be
#   used for any setup needed for the main loop body commands. See
#   docs/Command_Templates.md for G-Code format.
#gcode:
    FORCE_MOVE STEPPER="extruder_stepper ThreeMU_Lane1" DISTANCE=10 VELOCITY=800
    SET_GCODE_VARIABLE MACRO="_ThreeMU_Lane_Load1" VARIABLE=three_mu_distance VALUE={printer["loop_macro _ThreeMU_Lane_Load1"].three_mu_distance} + 10
    {% if printer["loop_macro _ThreeMU_Lane_Load1"].three_mu_post_load_lane1 == 1 %}
        BREAK
    {% endif %}
    {% if printer["loop_macro _ThreeMU_Lane_Load1"].three_mu_pre_load_lane1 == 0 %}
        M117 Lane 1 filament removed
        BREAK
    {% endif %}
    {% if printer["loop_macro _ThreeMU_Lane_Load1"].three_mu_distance >= printer["gcode_macro _ThreeMU_Settings"].three_mu_distance_load %}
        M117 Lane 1 unable to load filament
        PAUSE
        CONTINUE
    {% endif %} 
exit:
    M117 Lane 1 loaded
#iteration_limit:
variable_three_mu_pre_load_lane1: 0
variable_three_mu_post_load_lane1: 0
variable_three_mu_distance: 0
description: ThreeMU Lane 1 Load

[loop_macro _ThreeMU_Lane_Unload1]
#entry:
#   A list of G-Code commands to execute prior to the the looping
#   G-Code commands in the `gcode` section. These commands can be
#   used for any setup needed for the main loop body commands. See
#   docs/Command_Templates.md for G-Code format.
#gcode:
    FORCE_MOVE STEPPER="extruder_stepper ThreeMU_Lane1" DISTANCE=-10 VELOCITY=800
    SET_GCODE_VARIABLE MACRO="_ThreeMU_Lane_Unload1" VARIABLE=three_mu_distance VALUE={printer["loop_macro _ThreeMU_Lane_Unload1"].three_mu_distance} + 10
    {% if printer["loop_macro _ThreeMU_Lane_Unload1"].three_mu_post_load_lane1 == 0 %}
        BREAK
    {% endif %}
    {% if printer["loop_macro _ThreeMU_Lane_Unload1"].three_mu_distance >= printer["gcode_macro _ThreeMU_Settings"].three_mu_distance_unload %}
        M117 Lane 1 unable to unload filament
        PAUSE
        CONTINUE
    {% endif %} 
exit:
    M117 Lane 1 unloaded
variable_three_mu_distance: 0
